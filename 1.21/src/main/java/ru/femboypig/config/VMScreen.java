package ru.femboypig.config;

import dev.isxander.yacl3.api.*;
import dev.isxander.yacl3.api.controller.FloatSliderControllerBuilder;
import dev.isxander.yacl3.api.controller.TickBoxControllerBuilder;
import dev.isxander.yacl3.config.v2.api.ConfigClassHandler;
import dev.isxander.yacl3.config.v2.api.serializer.GsonConfigSerializerBuilder;
import net.fabricmc.loader.api.FabricLoader;
import net.minecraft.client.gui.screen.Screen;
import net.minecraft.text.Text;

import java.text.DecimalFormat;

public class VMScreen {
    public static final DecimalFormat FORMAT = new DecimalFormat("#.##");

    public static final ConfigClassHandler<VMConfig> CONFIG = ConfigClassHandler.createBuilder(VMConfig.class)
            .serializer(config -> GsonConfigSerializerBuilder.create(config)
                    .setPath(FabricLoader.getInstance().getConfigDir().resolve("visualratio.json"))
                    .build())
            .build();

    @SuppressWarnings("deprecation")
    public static Screen configScreen(Screen parent) {
        return YetAnotherConfigLib.create(CONFIG, ((defaults, config, builder) -> builder
                .title(Text.translatable("viewmodel.title"))
                .category(ConfigCategory.createBuilder()
                        .name(Text.translatable("viewmodel.category.item"))
                        .group(OptionGroup.createBuilder()
                                .name(Text.translatable("viewmodel.category.item"))
                                .option(Option.createBuilder(boolean.class)
                                        .name(Text.translatable("viewmodel.enabled"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.enabled")))
                                        .binding(defaults.enable, () -> config.enable, newVal -> config.enable = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.scale"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.scale")))
                                        .binding(1f, () -> config.scale, newVal -> config.scale = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(0.1f, 3f)
                                                .step(0.01f))
                                        .build())
                                .build())
                        .group(OptionGroup.createBuilder()
                                .name(Text.translatable("viewmodel.subcategory.pos"))
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.posX"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.posX")))
                                        .binding(0f, () -> config.posX, newVal -> config.posX = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-3f, 3f)
                                                .step(0.01f))
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.posY"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.posY")))
                                        .binding(0f, () -> config.posY, newVal -> config.posY = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-3f, 3f)
                                                .step(0.01f))
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.posZ"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.posZ")))
                                        .binding(0f, () -> config.posZ, newVal -> config.posZ = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-3f, 3f)
                                                .step(0.01f))
                                        .build())
                                .build())
                        .group(OptionGroup.createBuilder()
                                .name(Text.translatable("viewmodel.subcategory.rotMain"))
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.rotMainX"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.rotMainX")))
                                        .binding(0f, () -> config.rotMainX, newVal -> config.rotMainX = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-180f, 180f)
                                                .step(0.01f))
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.rotMainY"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.rotMainY")))
                                        .binding(0f, () -> config.rotMainY, newVal -> config.rotMainY = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-180f, 180f)
                                                .step(0.01f))
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.rotMainZ"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.rotMainZ")))
                                        .binding(0f, () -> config.rotMainZ, newVal -> config.rotMainZ = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-180f, 180f)
                                                .step(0.01f))
                                        .build())
                                .build())
                        .group(OptionGroup.createBuilder()
                                .name(Text.translatable("viewmodel.subcategory.rotOff"))
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.rotOffX"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.rotOffX")))
                                        .binding(0f, () -> config.rotOffX, newVal -> config.rotOffX = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-180f, 180f)
                                                .step(0.01f))
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.rotOffY"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.rotOffY")))
                                        .binding(0f, () -> config.rotOffY, newVal -> config.rotOffY = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-180f, 180f)
                                                .step(0.01f))
                                        .build())
                                .option(Option.createBuilder(float.class)
                                        .name(Text.translatable("viewmodel.rotOffZ"))
                                        .description(OptionDescription.of(Text.translatable("viewmodel.rotOffZ")))
                                        .binding(0f, () -> config.rotOffZ, newVal -> config.rotOffZ = newVal)
                                        .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                .range(-180f, 180f)
                                                .step(0.01f))
                                        .build())
                                .build())
                        .build())

                // ARM

                        .category(ConfigCategory.createBuilder()
                                .name(Text.translatable("viewmodel.category.arm"))
                                .group(OptionGroup.createBuilder()
                                        .name(Text.translatable("viewmodel.category.arm"))
                                        .option(Option.createBuilder(boolean.class)
                                                .name(Text.translatable("viewmodel.enabledArm"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.enabledArm")))
                                                .binding(defaults.enableArm, () -> config.enableArm, newVal -> config.enableArm = newVal)
                                                .controller(TickBoxControllerBuilder::create)
                                                .build())
                                        .build())
                                .group(OptionGroup.createBuilder()
                                        .name(Text.translatable("viewmodel.subcategory.posArm"))
                                        .option(Option.createBuilder(float.class)
                                                .name(Text.translatable("viewmodel.posArmX"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.posArmX")))
                                                .binding(0f, () -> config.posArmX, newVal -> config.posArmX = newVal)
                                                .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                        .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                        .range(-3f, 3f)
                                                        .step(0.01f))
                                                .build())
                                        .option(Option.createBuilder(float.class)
                                                .name(Text.translatable("viewmodel.posArmY"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.posArmY")))
                                                .binding(0f, () -> config.posArmY, newVal -> config.posArmY = newVal)
                                                .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                        .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                        .range(-3f, 3f)
                                                        .step(0.01f))
                                                .build())
                                        .option(Option.createBuilder(float.class)
                                                .name(Text.translatable("viewmodel.posArmZ"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.posArmZ")))
                                                .binding(0f, () -> config.posArmZ, newVal -> config.posArmZ = newVal)
                                                .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                        .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                        .range(-3f, 3f)
                                                        .step(0.01f))
                                                .build())
                                        .build())
                                .group(OptionGroup.createBuilder()
                                        .name(Text.translatable("viewmodel.subcategory.rotArm"))
                                        .option(Option.createBuilder(float.class)
                                                .name(Text.translatable("viewmodel.rotArmX"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.rotArmX")))
                                                .binding(0f, () -> config.rotArmX, newVal -> config.rotArmX = newVal)
                                                .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                        .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                        .range(-180f, 180f)
                                                        .step(0.01f))
                                                .build())
                                        .option(Option.createBuilder(float.class)
                                                .name(Text.translatable("viewmodel.rotArmY"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.rotArmY")))
                                                .binding(0f, () -> config.rotArmY, newVal -> config.rotArmY = newVal)
                                                .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                        .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                        .range(-180f, 180f)
                                                        .step(0.01f))
                                                .build())
                                        .option(Option.createBuilder(float.class)
                                                .name(Text.translatable("viewmodel.rotArmZ"))
                                                .description(OptionDescription.of(Text.translatable("viewmodel.rotArmZ")))
                                                .binding(0f, () -> config.rotArmZ, newVal -> config.rotArmZ = newVal)
                                                .controller(opt -> FloatSliderControllerBuilder.create(opt)
                                                        .valueFormatter(value -> Text.literal(FORMAT.format(value)))
                                                        .range(-180f, 180f)
                                                        .step(0.01f))
                                                .build())
                                        .build())
                                .build())
        )).generateScreen(parent);
    }
}